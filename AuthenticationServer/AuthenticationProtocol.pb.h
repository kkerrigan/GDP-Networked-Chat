// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AuthenticationProtocol.proto

#ifndef PROTOBUF_INCLUDED_AuthenticationProtocol_2eproto
#define PROTOBUF_INCLUDED_AuthenticationProtocol_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AuthenticationProtocol_2eproto 

namespace protobuf_AuthenticationProtocol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AuthenticationProtocol_2eproto
class AuthenticateWeb;
class AuthenticateWebDefaultTypeInternal;
extern AuthenticateWebDefaultTypeInternal _AuthenticateWeb_default_instance_;
class AuthenticateWebFailure;
class AuthenticateWebFailureDefaultTypeInternal;
extern AuthenticateWebFailureDefaultTypeInternal _AuthenticateWebFailure_default_instance_;
class AuthenticateWebSuccess;
class AuthenticateWebSuccessDefaultTypeInternal;
extern AuthenticateWebSuccessDefaultTypeInternal _AuthenticateWebSuccess_default_instance_;
class CreateAccountWeb;
class CreateAccountWebDefaultTypeInternal;
extern CreateAccountWebDefaultTypeInternal _CreateAccountWeb_default_instance_;
class CreateAccountWebFailure;
class CreateAccountWebFailureDefaultTypeInternal;
extern CreateAccountWebFailureDefaultTypeInternal _CreateAccountWebFailure_default_instance_;
class CreateAccountWebSuccess;
class CreateAccountWebSuccessDefaultTypeInternal;
extern CreateAccountWebSuccessDefaultTypeInternal _CreateAccountWebSuccess_default_instance_;
namespace google {
namespace protobuf {
template<> ::AuthenticateWeb* Arena::CreateMaybeMessage<::AuthenticateWeb>(Arena*);
template<> ::AuthenticateWebFailure* Arena::CreateMaybeMessage<::AuthenticateWebFailure>(Arena*);
template<> ::AuthenticateWebSuccess* Arena::CreateMaybeMessage<::AuthenticateWebSuccess>(Arena*);
template<> ::CreateAccountWeb* Arena::CreateMaybeMessage<::CreateAccountWeb>(Arena*);
template<> ::CreateAccountWebFailure* Arena::CreateMaybeMessage<::CreateAccountWebFailure>(Arena*);
template<> ::CreateAccountWebSuccess* Arena::CreateMaybeMessage<::CreateAccountWebSuccess>(Arena*);
}  // namespace protobuf
}  // namespace google

enum CreateAccountWebFailure_eReason {
  CreateAccountWebFailure_eReason_ACCOUNT_ALREADY_EXISTS = 1,
  CreateAccountWebFailure_eReason_INVALID_PASSWORD = 2,
  CreateAccountWebFailure_eReason_INTERNAL_SERVER_ERROR = 3
};
bool CreateAccountWebFailure_eReason_IsValid(int value);
const CreateAccountWebFailure_eReason CreateAccountWebFailure_eReason_eReason_MIN = CreateAccountWebFailure_eReason_ACCOUNT_ALREADY_EXISTS;
const CreateAccountWebFailure_eReason CreateAccountWebFailure_eReason_eReason_MAX = CreateAccountWebFailure_eReason_INTERNAL_SERVER_ERROR;
const int CreateAccountWebFailure_eReason_eReason_ARRAYSIZE = CreateAccountWebFailure_eReason_eReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateAccountWebFailure_eReason_descriptor();
inline const ::std::string& CreateAccountWebFailure_eReason_Name(CreateAccountWebFailure_eReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateAccountWebFailure_eReason_descriptor(), value);
}
inline bool CreateAccountWebFailure_eReason_Parse(
    const ::std::string& name, CreateAccountWebFailure_eReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateAccountWebFailure_eReason>(
    CreateAccountWebFailure_eReason_descriptor(), name, value);
}
enum AuthenticateWebFailure_eReason {
  AuthenticateWebFailure_eReason_INVALID_CREDENTIALS = 1,
  AuthenticateWebFailure_eReason_INTERNAL_SERVER_ERROR = 2
};
bool AuthenticateWebFailure_eReason_IsValid(int value);
const AuthenticateWebFailure_eReason AuthenticateWebFailure_eReason_eReason_MIN = AuthenticateWebFailure_eReason_INVALID_CREDENTIALS;
const AuthenticateWebFailure_eReason AuthenticateWebFailure_eReason_eReason_MAX = AuthenticateWebFailure_eReason_INTERNAL_SERVER_ERROR;
const int AuthenticateWebFailure_eReason_eReason_ARRAYSIZE = AuthenticateWebFailure_eReason_eReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthenticateWebFailure_eReason_descriptor();
inline const ::std::string& AuthenticateWebFailure_eReason_Name(AuthenticateWebFailure_eReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthenticateWebFailure_eReason_descriptor(), value);
}
inline bool AuthenticateWebFailure_eReason_Parse(
    const ::std::string& name, AuthenticateWebFailure_eReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthenticateWebFailure_eReason>(
    AuthenticateWebFailure_eReason_descriptor(), name, value);
}
// ===================================================================

class CreateAccountWeb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateAccountWeb) */ {
 public:
  CreateAccountWeb();
  virtual ~CreateAccountWeb();

  CreateAccountWeb(const CreateAccountWeb& from);

  inline CreateAccountWeb& operator=(const CreateAccountWeb& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccountWeb(CreateAccountWeb&& from) noexcept
    : CreateAccountWeb() {
    *this = ::std::move(from);
  }

  inline CreateAccountWeb& operator=(CreateAccountWeb&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWeb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccountWeb* internal_default_instance() {
    return reinterpret_cast<const CreateAccountWeb*>(
               &_CreateAccountWeb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateAccountWeb* other);
  friend void swap(CreateAccountWeb& a, CreateAccountWeb& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccountWeb* New() const final {
    return CreateMaybeMessage<CreateAccountWeb>(NULL);
  }

  CreateAccountWeb* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAccountWeb>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAccountWeb& from);
  void MergeFrom(const CreateAccountWeb& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAccountWeb* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintextpassword(::std::string&& value);
  #endif
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // required int64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CreateAccountWeb)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_email();
  void clear_has_email();
  void set_has_plaintextpassword();
  void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::int64 requestid_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAccountWebSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateAccountWebSuccess) */ {
 public:
  CreateAccountWebSuccess();
  virtual ~CreateAccountWebSuccess();

  CreateAccountWebSuccess(const CreateAccountWebSuccess& from);

  inline CreateAccountWebSuccess& operator=(const CreateAccountWebSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccountWebSuccess(CreateAccountWebSuccess&& from) noexcept
    : CreateAccountWebSuccess() {
    *this = ::std::move(from);
  }

  inline CreateAccountWebSuccess& operator=(CreateAccountWebSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWebSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccountWebSuccess* internal_default_instance() {
    return reinterpret_cast<const CreateAccountWebSuccess*>(
               &_CreateAccountWebSuccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateAccountWebSuccess* other);
  friend void swap(CreateAccountWebSuccess& a, CreateAccountWebSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccountWebSuccess* New() const final {
    return CreateMaybeMessage<CreateAccountWebSuccess>(NULL);
  }

  CreateAccountWebSuccess* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAccountWebSuccess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAccountWebSuccess& from);
  void MergeFrom(const CreateAccountWebSuccess& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAccountWebSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // required int64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CreateAccountWebSuccess)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_userid();
  void clear_has_userid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 requestid_;
  ::google::protobuf::int64 userid_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAccountWebFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateAccountWebFailure) */ {
 public:
  CreateAccountWebFailure();
  virtual ~CreateAccountWebFailure();

  CreateAccountWebFailure(const CreateAccountWebFailure& from);

  inline CreateAccountWebFailure& operator=(const CreateAccountWebFailure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccountWebFailure(CreateAccountWebFailure&& from) noexcept
    : CreateAccountWebFailure() {
    *this = ::std::move(from);
  }

  inline CreateAccountWebFailure& operator=(CreateAccountWebFailure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountWebFailure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccountWebFailure* internal_default_instance() {
    return reinterpret_cast<const CreateAccountWebFailure*>(
               &_CreateAccountWebFailure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreateAccountWebFailure* other);
  friend void swap(CreateAccountWebFailure& a, CreateAccountWebFailure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccountWebFailure* New() const final {
    return CreateMaybeMessage<CreateAccountWebFailure>(NULL);
  }

  CreateAccountWebFailure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAccountWebFailure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAccountWebFailure& from);
  void MergeFrom(const CreateAccountWebFailure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAccountWebFailure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CreateAccountWebFailure_eReason eReason;
  static const eReason ACCOUNT_ALREADY_EXISTS =
    CreateAccountWebFailure_eReason_ACCOUNT_ALREADY_EXISTS;
  static const eReason INVALID_PASSWORD =
    CreateAccountWebFailure_eReason_INVALID_PASSWORD;
  static const eReason INTERNAL_SERVER_ERROR =
    CreateAccountWebFailure_eReason_INTERNAL_SERVER_ERROR;
  static inline bool eReason_IsValid(int value) {
    return CreateAccountWebFailure_eReason_IsValid(value);
  }
  static const eReason eReason_MIN =
    CreateAccountWebFailure_eReason_eReason_MIN;
  static const eReason eReason_MAX =
    CreateAccountWebFailure_eReason_eReason_MAX;
  static const int eReason_ARRAYSIZE =
    CreateAccountWebFailure_eReason_eReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  eReason_descriptor() {
    return CreateAccountWebFailure_eReason_descriptor();
  }
  static inline const ::std::string& eReason_Name(eReason value) {
    return CreateAccountWebFailure_eReason_Name(value);
  }
  static inline bool eReason_Parse(const ::std::string& name,
      eReason* value) {
    return CreateAccountWebFailure_eReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // required .CreateAccountWebFailure.eReason reason = 2;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::CreateAccountWebFailure_eReason reason() const;
  void set_reason(::CreateAccountWebFailure_eReason value);

  // @@protoc_insertion_point(class_scope:CreateAccountWebFailure)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 requestid_;
  int reason_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthenticateWeb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AuthenticateWeb) */ {
 public:
  AuthenticateWeb();
  virtual ~AuthenticateWeb();

  AuthenticateWeb(const AuthenticateWeb& from);

  inline AuthenticateWeb& operator=(const AuthenticateWeb& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateWeb(AuthenticateWeb&& from) noexcept
    : AuthenticateWeb() {
    *this = ::std::move(from);
  }

  inline AuthenticateWeb& operator=(AuthenticateWeb&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWeb& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateWeb* internal_default_instance() {
    return reinterpret_cast<const AuthenticateWeb*>(
               &_AuthenticateWeb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AuthenticateWeb* other);
  friend void swap(AuthenticateWeb& a, AuthenticateWeb& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateWeb* New() const final {
    return CreateMaybeMessage<AuthenticateWeb>(NULL);
  }

  AuthenticateWeb* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthenticateWeb>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthenticateWeb& from);
  void MergeFrom(const AuthenticateWeb& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthenticateWeb* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintextpassword(::std::string&& value);
  #endif
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // required int64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AuthenticateWeb)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_email();
  void clear_has_email();
  void set_has_plaintextpassword();
  void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::int64 requestid_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthenticateWebSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AuthenticateWebSuccess) */ {
 public:
  AuthenticateWebSuccess();
  virtual ~AuthenticateWebSuccess();

  AuthenticateWebSuccess(const AuthenticateWebSuccess& from);

  inline AuthenticateWebSuccess& operator=(const AuthenticateWebSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateWebSuccess(AuthenticateWebSuccess&& from) noexcept
    : AuthenticateWebSuccess() {
    *this = ::std::move(from);
  }

  inline AuthenticateWebSuccess& operator=(AuthenticateWebSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWebSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateWebSuccess* internal_default_instance() {
    return reinterpret_cast<const AuthenticateWebSuccess*>(
               &_AuthenticateWebSuccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AuthenticateWebSuccess* other);
  friend void swap(AuthenticateWebSuccess& a, AuthenticateWebSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateWebSuccess* New() const final {
    return CreateMaybeMessage<AuthenticateWebSuccess>(NULL);
  }

  AuthenticateWebSuccess* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthenticateWebSuccess>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthenticateWebSuccess& from);
  void MergeFrom(const AuthenticateWebSuccess& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthenticateWebSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string email = 1;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string creationDate = 4;
  bool has_creationdate() const;
  void clear_creationdate();
  static const int kCreationDateFieldNumber = 4;
  const ::std::string& creationdate() const;
  void set_creationdate(const ::std::string& value);
  #if LANG_CXX11
  void set_creationdate(::std::string&& value);
  #endif
  void set_creationdate(const char* value);
  void set_creationdate(const char* value, size_t size);
  ::std::string* mutable_creationdate();
  ::std::string* release_creationdate();
  void set_allocated_creationdate(::std::string* creationdate);

  // required int64 requestId = 2;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 2;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // required int64 userId = 3;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AuthenticateWebSuccess)
 private:
  void set_has_email();
  void clear_has_email();
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_userid();
  void clear_has_userid();
  void set_has_creationdate();
  void clear_has_creationdate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr creationdate_;
  ::google::protobuf::int64 requestid_;
  ::google::protobuf::int64 userid_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthenticateWebFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AuthenticateWebFailure) */ {
 public:
  AuthenticateWebFailure();
  virtual ~AuthenticateWebFailure();

  AuthenticateWebFailure(const AuthenticateWebFailure& from);

  inline AuthenticateWebFailure& operator=(const AuthenticateWebFailure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateWebFailure(AuthenticateWebFailure&& from) noexcept
    : AuthenticateWebFailure() {
    *this = ::std::move(from);
  }

  inline AuthenticateWebFailure& operator=(AuthenticateWebFailure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateWebFailure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateWebFailure* internal_default_instance() {
    return reinterpret_cast<const AuthenticateWebFailure*>(
               &_AuthenticateWebFailure_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AuthenticateWebFailure* other);
  friend void swap(AuthenticateWebFailure& a, AuthenticateWebFailure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateWebFailure* New() const final {
    return CreateMaybeMessage<AuthenticateWebFailure>(NULL);
  }

  AuthenticateWebFailure* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AuthenticateWebFailure>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AuthenticateWebFailure& from);
  void MergeFrom(const AuthenticateWebFailure& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AuthenticateWebFailure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AuthenticateWebFailure_eReason eReason;
  static const eReason INVALID_CREDENTIALS =
    AuthenticateWebFailure_eReason_INVALID_CREDENTIALS;
  static const eReason INTERNAL_SERVER_ERROR =
    AuthenticateWebFailure_eReason_INTERNAL_SERVER_ERROR;
  static inline bool eReason_IsValid(int value) {
    return AuthenticateWebFailure_eReason_IsValid(value);
  }
  static const eReason eReason_MIN =
    AuthenticateWebFailure_eReason_eReason_MIN;
  static const eReason eReason_MAX =
    AuthenticateWebFailure_eReason_eReason_MAX;
  static const int eReason_ARRAYSIZE =
    AuthenticateWebFailure_eReason_eReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  eReason_descriptor() {
    return AuthenticateWebFailure_eReason_descriptor();
  }
  static inline const ::std::string& eReason_Name(eReason value) {
    return AuthenticateWebFailure_eReason_Name(value);
  }
  static inline bool eReason_Parse(const ::std::string& name,
      eReason* value) {
    return AuthenticateWebFailure_eReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::int64 requestid() const;
  void set_requestid(::google::protobuf::int64 value);

  // required .AuthenticateWebFailure.eReason reason = 2;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::AuthenticateWebFailure_eReason reason() const;
  void set_reason(::AuthenticateWebFailure_eReason value);

  // @@protoc_insertion_point(class_scope:AuthenticateWebFailure)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 requestid_;
  int reason_;
  friend struct ::protobuf_AuthenticationProtocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateAccountWeb

// required int64 requestId = 1;
inline bool CreateAccountWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAccountWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAccountWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAccountWeb::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 CreateAccountWeb::requestid() const {
  // @@protoc_insertion_point(field_get:CreateAccountWeb.requestId)
  return requestid_;
}
inline void CreateAccountWeb::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:CreateAccountWeb.requestId)
}

// required string email = 2;
inline bool CreateAccountWeb::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWeb::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& CreateAccountWeb::email() const {
  // @@protoc_insertion_point(field_get:CreateAccountWeb.email)
  return email_.GetNoArena();
}
inline void CreateAccountWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateAccountWeb.email)
}
#if LANG_CXX11
inline void CreateAccountWeb::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateAccountWeb.email)
}
#endif
inline void CreateAccountWeb::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateAccountWeb.email)
}
inline void CreateAccountWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateAccountWeb.email)
}
inline ::std::string* CreateAccountWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:CreateAccountWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccountWeb::release_email() {
  // @@protoc_insertion_point(field_release:CreateAccountWeb.email)
  if (!has_email()) {
    return NULL;
  }
  clear_has_email();
  return email_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:CreateAccountWeb.email)
}

// required string plaintextPassword = 3;
inline bool CreateAccountWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& CreateAccountWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena();
}
inline void CreateAccountWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateAccountWeb.plaintextPassword)
}
#if LANG_CXX11
inline void CreateAccountWeb::set_plaintextpassword(::std::string&& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateAccountWeb.plaintextPassword)
}
#endif
inline void CreateAccountWeb::set_plaintextpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateAccountWeb.plaintextPassword)
}
inline void CreateAccountWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateAccountWeb.plaintextPassword)
}
inline ::std::string* CreateAccountWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:CreateAccountWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccountWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:CreateAccountWeb.plaintextPassword)
  if (!has_plaintextpassword()) {
    return NULL;
  }
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccountWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:CreateAccountWeb.plaintextPassword)
}

// -------------------------------------------------------------------

// CreateAccountWebSuccess

// required int64 requestId = 1;
inline bool CreateAccountWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 CreateAccountWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:CreateAccountWebSuccess.requestId)
  return requestid_;
}
inline void CreateAccountWebSuccess::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:CreateAccountWebSuccess.requestId)
}

// required int64 userId = 2;
inline bool CreateAccountWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWebSuccess::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 CreateAccountWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:CreateAccountWebSuccess.userId)
  return userid_;
}
inline void CreateAccountWebSuccess::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:CreateAccountWebSuccess.userId)
}

// -------------------------------------------------------------------

// CreateAccountWebFailure

// required int64 requestId = 1;
inline bool CreateAccountWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountWebFailure::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 CreateAccountWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:CreateAccountWebFailure.requestId)
  return requestid_;
}
inline void CreateAccountWebFailure::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:CreateAccountWebFailure.requestId)
}

// required .CreateAccountWebFailure.eReason reason = 2;
inline bool CreateAccountWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountWebFailure::clear_reason() {
  reason_ = 1;
  clear_has_reason();
}
inline ::CreateAccountWebFailure_eReason CreateAccountWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:CreateAccountWebFailure.reason)
  return static_cast< ::CreateAccountWebFailure_eReason >(reason_);
}
inline void CreateAccountWebFailure::set_reason(::CreateAccountWebFailure_eReason value) {
  assert(::CreateAccountWebFailure_eReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CreateAccountWebFailure.reason)
}

// -------------------------------------------------------------------

// AuthenticateWeb

// required int64 requestId = 1;
inline bool AuthenticateWeb::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateWeb::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateWeb::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateWeb::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 AuthenticateWeb::requestid() const {
  // @@protoc_insertion_point(field_get:AuthenticateWeb.requestId)
  return requestid_;
}
inline void AuthenticateWeb::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AuthenticateWeb.requestId)
}

// required string email = 2;
inline bool AuthenticateWeb::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWeb::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWeb::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWeb::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& AuthenticateWeb::email() const {
  // @@protoc_insertion_point(field_get:AuthenticateWeb.email)
  return email_.GetNoArena();
}
inline void AuthenticateWeb::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthenticateWeb.email)
}
#if LANG_CXX11
inline void AuthenticateWeb::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthenticateWeb.email)
}
#endif
inline void AuthenticateWeb::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthenticateWeb.email)
}
inline void AuthenticateWeb::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthenticateWeb.email)
}
inline ::std::string* AuthenticateWeb::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:AuthenticateWeb.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWeb::release_email() {
  // @@protoc_insertion_point(field_release:AuthenticateWeb.email)
  if (!has_email()) {
    return NULL;
  }
  clear_has_email();
  return email_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:AuthenticateWeb.email)
}

// required string plaintextPassword = 3;
inline bool AuthenticateWeb::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWeb::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWeb::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWeb::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& AuthenticateWeb::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.GetNoArena();
}
inline void AuthenticateWeb::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthenticateWeb.plaintextPassword)
}
#if LANG_CXX11
inline void AuthenticateWeb::set_plaintextpassword(::std::string&& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthenticateWeb.plaintextPassword)
}
#endif
inline void AuthenticateWeb::set_plaintextpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthenticateWeb.plaintextPassword)
}
inline void AuthenticateWeb::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthenticateWeb.plaintextPassword)
}
inline ::std::string* AuthenticateWeb::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:AuthenticateWeb.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWeb::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:AuthenticateWeb.plaintextPassword)
  if (!has_plaintextpassword()) {
    return NULL;
  }
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWeb::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:AuthenticateWeb.plaintextPassword)
}

// -------------------------------------------------------------------

// AuthenticateWebSuccess

// required string email = 1;
inline bool AuthenticateWebSuccess::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWebSuccess::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWebSuccess::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWebSuccess::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& AuthenticateWebSuccess::email() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebSuccess.email)
  return email_.GetNoArena();
}
inline void AuthenticateWebSuccess::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthenticateWebSuccess.email)
}
#if LANG_CXX11
inline void AuthenticateWebSuccess::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthenticateWebSuccess.email)
}
#endif
inline void AuthenticateWebSuccess::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthenticateWebSuccess.email)
}
inline void AuthenticateWebSuccess::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthenticateWebSuccess.email)
}
inline ::std::string* AuthenticateWebSuccess::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:AuthenticateWebSuccess.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWebSuccess::release_email() {
  // @@protoc_insertion_point(field_release:AuthenticateWebSuccess.email)
  if (!has_email()) {
    return NULL;
  }
  clear_has_email();
  return email_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWebSuccess::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:AuthenticateWebSuccess.email)
}

// required int64 requestId = 2;
inline bool AuthenticateWebSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateWebSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateWebSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateWebSuccess::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 AuthenticateWebSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebSuccess.requestId)
  return requestid_;
}
inline void AuthenticateWebSuccess::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AuthenticateWebSuccess.requestId)
}

// required int64 userId = 3;
inline bool AuthenticateWebSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthenticateWebSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthenticateWebSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthenticateWebSuccess::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 AuthenticateWebSuccess::userid() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebSuccess.userId)
  return userid_;
}
inline void AuthenticateWebSuccess::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:AuthenticateWebSuccess.userId)
}

// required string creationDate = 4;
inline bool AuthenticateWebSuccess::has_creationdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWebSuccess::set_has_creationdate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWebSuccess::clear_has_creationdate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWebSuccess::clear_creationdate() {
  creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creationdate();
}
inline const ::std::string& AuthenticateWebSuccess::creationdate() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebSuccess.creationDate)
  return creationdate_.GetNoArena();
}
inline void AuthenticateWebSuccess::set_creationdate(const ::std::string& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AuthenticateWebSuccess.creationDate)
}
#if LANG_CXX11
inline void AuthenticateWebSuccess::set_creationdate(::std::string&& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AuthenticateWebSuccess.creationDate)
}
#endif
inline void AuthenticateWebSuccess::set_creationdate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AuthenticateWebSuccess.creationDate)
}
inline void AuthenticateWebSuccess::set_creationdate(const char* value, size_t size) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AuthenticateWebSuccess.creationDate)
}
inline ::std::string* AuthenticateWebSuccess::mutable_creationdate() {
  set_has_creationdate();
  // @@protoc_insertion_point(field_mutable:AuthenticateWebSuccess.creationDate)
  return creationdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateWebSuccess::release_creationdate() {
  // @@protoc_insertion_point(field_release:AuthenticateWebSuccess.creationDate)
  if (!has_creationdate()) {
    return NULL;
  }
  clear_has_creationdate();
  return creationdate_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateWebSuccess::set_allocated_creationdate(::std::string* creationdate) {
  if (creationdate != NULL) {
    set_has_creationdate();
  } else {
    clear_has_creationdate();
  }
  creationdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creationdate);
  // @@protoc_insertion_point(field_set_allocated:AuthenticateWebSuccess.creationDate)
}

// -------------------------------------------------------------------

// AuthenticateWebFailure

// required int64 requestId = 1;
inline bool AuthenticateWebFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateWebFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateWebFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateWebFailure::clear_requestid() {
  requestid_ = GOOGLE_LONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::int64 AuthenticateWebFailure::requestid() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebFailure.requestId)
  return requestid_;
}
inline void AuthenticateWebFailure::set_requestid(::google::protobuf::int64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AuthenticateWebFailure.requestId)
}

// required .AuthenticateWebFailure.eReason reason = 2;
inline bool AuthenticateWebFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateWebFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateWebFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateWebFailure::clear_reason() {
  reason_ = 1;
  clear_has_reason();
}
inline ::AuthenticateWebFailure_eReason AuthenticateWebFailure::reason() const {
  // @@protoc_insertion_point(field_get:AuthenticateWebFailure.reason)
  return static_cast< ::AuthenticateWebFailure_eReason >(reason_);
}
inline void AuthenticateWebFailure::set_reason(::AuthenticateWebFailure_eReason value) {
  assert(::AuthenticateWebFailure_eReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:AuthenticateWebFailure.reason)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CreateAccountWebFailure_eReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CreateAccountWebFailure_eReason>() {
  return ::CreateAccountWebFailure_eReason_descriptor();
}
template <> struct is_proto_enum< ::AuthenticateWebFailure_eReason> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AuthenticateWebFailure_eReason>() {
  return ::AuthenticateWebFailure_eReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AuthenticationProtocol_2eproto
